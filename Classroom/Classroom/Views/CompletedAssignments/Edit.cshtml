@model Classroom.ViewModels.VirtualClassroomViewModel

@{
    Layout = "~/Views/Shared/_InstructorClassroom.cshtml";
}


<div class="classroom-form">
    <h4>@Model.CompletedAssignment.Assignment.TaskTitle</h4>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()



        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.CompletedAssignment.Id)
        @Html.HiddenFor(model => model.CompletedAssignment.AssignmentId)
        @Html.HiddenFor(model => model.CompletedAssignment.StudentId)
        @Html.HiddenFor(model => model.CompletedAssignment.VirtualClassroomId)
        @Html.HiddenFor(model => model.CompletedAssignment.GradeId)


        <div class="form-group">
            @Html.LabelFor(model => model.CompletedAssignment.Title)

            @Html.EditorFor(model => model.CompletedAssignment.Title, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.CompletedAssignment.Title, "", new {@class = "text-danger"})

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompletedAssignment.Description)

            @Html.EditorFor(model => model.CompletedAssignment.Description, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.CompletedAssignment.Description, "", new {@class = "text-danger"})
        </div>

        <div class="form-group">
            @Html.Label("Attached Files")
                @foreach (var file in Model.CompletedAssignment.CompletedAssignmentFileDetails)
                {
                    <B>
                        <a class="btn btn-success btn-sm" href="/Assignments/Download/?p=@(file.FileId + file.Extension)&d=@file.FileName">@file.FileName</a>
                        <a href="javascript:void(0);" data-id="@file.FileId" class="deleteAssignment">
                            <i class="fa fa-times" style="color: red" aria-hidden="true"></i>
                        </a>
                    </B>
                }


        </div>




        @*<div class="form-group">
            @Html.LabelFor(model => model.CompletedDateTime)

            @Html.EditorFor(model => model.CompletedDateTime, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.CompletedDateTime, "", new {@class = "text-danger"})

        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.CompletedAssignment.Grade.PointsReceived)

            @Html.EditorFor(model => model.CompletedAssignment.Grade.PointsReceived, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.CompletedAssignment.Grade.PointsReceived, "", new {@class = "text-danger"})

        </div>



        <div class="form-group">

            <input type="submit" value="Save" class="btn btn-default"/>

        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
