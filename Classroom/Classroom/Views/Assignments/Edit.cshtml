@model Classroom.Models.Assignment

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Assignments", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Assignment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.AssignmentId)

        <div class="form-group">
            @Html.LabelFor(model => model.TaskTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TaskTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TaskTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaskDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.TaskDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TaskDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TaskAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.TaskAvailable)
                    @Html.ValidationMessageFor(model => model.TaskAvailable, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AvailableDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AvailableDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AvailableDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DueDate, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.DueDate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.DueDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Files:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="file" multiple="multiple"/>
                <br/>
                <ul class="attachment">
                    @foreach (var item in Model.FileDetails)
                {
                    <li>
                        <a class="btn btn-success" href="/Assignments/Download/?p=@(item.FileId + item.Extension)&d=@item.FileName">@item.FileName</a>
                        <a href="javascript:void(0);" data-id="@item.FileId" class="deleteItem"><i class="fa fa-times" style="color: red" aria-hidden="true"></i></a>
                        <p></p>
                    </li>
                    
                    }
                </ul>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
    $('.deleteItem').click(function (e) {
           e.preventDefault();
           var $ctrl = $(this);
           if (confirm('Do you really want to delete this file?')) {
               $.ajax({
                   url: '@Url.Action("DeleteFile")',
                type: 'POST',
                data: { id: $(this).data('id') }
                }).done(function (data) {
                if (data.Result == "OK") {
                $ctrl.closest('li').remove();
                }
                else if (data.Result.Message) {
                alert(data.Result.Message);
                }
                }).fail(function () {
                alert("There is something wrong. Please try again.");
                })

                }
    });
    </script>
}
