@model Classroom.ViewModels.TestViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Instructor.cshtml";
}



<div class="classroom-form">
    <h2>New Test</h2>
    @using (Html.BeginForm("Create", "Tests", null, FormMethod.Post, new {enctype = "multipart/form-data"}))
    {
        @Html.AntiForgeryToken()

        <p class="alert alert-info">All fields are <strong>required</strong>.
        </p>


        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        <div class="form-group">
            @Html.LabelFor(model => model.Title)

            @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control", autofocus = "autofocus"}})
            @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description)

            @Html.TextAreaFor(model => model.Description, new {@class = "form-control"})
            @Html.ValidationMessageFor(model => model.Description, "", new {@class = "text-danger"})

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AvailableDate)

            @Html.EditorFor(model => model.AvailableDate, new {htmlAttributes = new {@class = "form-control", id = "availabledatepicker"}})
            @Html.ValidationMessageFor(model => model.AvailableDate, "", new {@class = "text-danger"})

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DueDate)

            @Html.EditorFor(model => model.DueDate, new {htmlAttributes = new {@class = "form-control", id = "duedatepicker"}})
            @Html.ValidationMessageFor(model => model.DueDate, "", new {@class = "text-danger"})

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PointsWorth)

            @Html.EditorFor(model => model.PointsWorth, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.PointsWorth, "", new {@class = "text-danger"})

        </div>
        <div class="form-group">
            @Html.Label("Files:")
        </div>
        <div class="input-group">
            <label class="input-group-btn">
                <span class="btn btn-primary">
                Browse&hellip; <input type="file" name="file" style="display: none;" multiple>
            </span>
            </label>
            <input type="text" class="form-control" placeholder="No Files Selected" readonly>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.VirtualClassrooms)
            <div class="form-group checkboxlist">
                @foreach (var classroom in Model.VirtualClassrooms)
                {
                    <input type="checkbox" name="selectedClassrooms" value="@classroom.Id"/>
                    @classroom.ClassroomName<br/>
                }
            </div>
            @Html.ValidationMessageFor(model => model.ClassroomId, "", new {@class = "text-danger"})
        </div>

        <div class="form-group">

            <input type="submit" value="Create" class="btn btn-default"/> |
            @Html.ActionLink("Back to List", "Index")
        </div>

    }
</div>

@section Scripts{
    <script>
        $(function () {

            // We can attach the `fileselect` event to all file inputs on the page
            $(document).on('change', ':file', function () {
                var input = $(this),
                    numFiles = input.get(0).files ? input.get(0).files.length : 1,
                    label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
                input.trigger('fileselect', [numFiles, label]);
            });

            // We can watch for our custom `fileselect` event like this
            $(document).ready(function () {
                $(':file').on('fileselect', function (event, numFiles, label) {

                    var input = $(this).parents('.input-group').find(':text'),
                        log = numFiles > 1 ? numFiles + ' files selected' : label;

                    if (input.length) {
                        input.val(log);
                    } else {
                        if (log) alert(log);
                    }

                });
            });

        });

        $(function () {
            $("#duedatepicker").datepicker({
                showOtherMonths: true,
                selectOtherMonths: true,
                changeMonth: true,
                changeYear: true
            });
        });
        $(function () {
            $("#availabledatepicker").datepicker({
                showOtherMonths: true,
                selectOtherMonths: true,
                changeMonth: true,
                changeYear: true
            });
        });

    </script>
}
